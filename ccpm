#!/bin/bash

# CCPM CLI Wrapper
# This script provides CCPM commands for the current project

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CLAUDE_DIR="$SCRIPT_DIR/.claude"

# Check if .claude directory exists
if [ ! -d "$CLAUDE_DIR" ]; then
    echo "Error: CCPM not initialized in this project. Run 'ccpm init' first."
    exit 1
fi

# Function to show help
show_help() {
    echo "CCPM (Claude Code PM) - Project Management Commands"
    echo ""
    echo "Usage: ./ccpm <command> [options]"
    echo ""
    echo "Commands:"
    echo "  init          Initialize CCPM in current project"
    echo "  prd-new       Create new PRD (Product Requirements Document)"
    echo "  epic-start    Start new epic"
    echo "  issue-start   Start new issue"
    echo "  next          Show next available task"
    echo "  status        Show current project status"
    echo "  help          Show this help message"
    echo ""
    echo "Examples:"
    echo "  ./ccpm prd-new 'User Authentication System'"
    echo "  ./ccpm epic-start 'Implement OAuth2'"
    echo "  ./ccpm issue-start 'Add login form validation'"
}

# Function to run CCPM commands
run_ccpm_command() {
    local command="$1"
    shift
    
    case "$command" in
        "prd-new")
            echo "Creating new PRD: $*"
            # TODO: Implement PRD creation
            ;;
        "epic-start")
            echo "Starting new epic: $*"
            # TODO: Implement epic creation
            ;;
        "issue-start")
            echo "Starting new issue: $*"
            # TODO: Implement issue creation
            ;;
        "next")
            echo "Next available task:"
            # TODO: Implement next task display
            ;;
        "status")
            echo "CCPM Project Status:"
            echo "  Project: $(basename "$SCRIPT_DIR")"
            echo "  Worktrees: $(find "$CLAUDE_DIR/worktrees" -maxdepth 1 -type d 2>/dev/null | wc -l)"
            echo "  Context files: $(find "$CLAUDE_DIR/context" -name "*.json" 2>/dev/null | wc -l)"
            ;;
        "help"|"--help"|"-h")
            show_help
            ;;
        *)
            echo "Unknown command: $command"
            show_help
            exit 1
            ;;
    esac
}

# Main execution
if [ $# -eq 0 ]; then
    show_help
    exit 1
fi

run_ccpm_command "$@"
